package model.pso.core.test;

import it.unimi.dsi.fastutil.ints.Int2IntLinkedOpenHashMap;
import main.Main;
import model.dataset.DatasetP2Generator3;
import model.dataset.component.Lesson;
import model.dataset.component.Timeoff;
import model.dataset.core.Dataset2;
import model.dataset.core.DatasetConverter;
import model.dataset.core.WorkingSet;
import model.pso.component.Data;
import model.pso.component.Position;
import model.pso.component.Setting;
import model.pso.core.PSOP2;
import org.junit.Test;

/*
 * This <Skripsi_003> project in package <model.pso.core.test> created by : 
 * Name         : syafiq
 * Date / Time  : 24 August 2016, 12:51 PM.
 * Email        : syafiq.rezpector@gmail.com
 * Github       : syafiqq
 */
public class PSOP2TestForPosition
{
    final Setting setting = Setting.getInstance();
    private Dataset2<Timeoff, Lesson>                  dataset;
    private WorkingSet                                 workingset;
    private DatasetConverter<Int2IntLinkedOpenHashMap> encoder;
    private DatasetConverter<Int2IntLinkedOpenHashMap> decoder;
    private DatasetP2Generator3                        gen;
    private PSOP2                                      pso;

    @SuppressWarnings("Duplicates") public void generateDataset()
    {
        Main.getMyDatabaseAccount();
        this.dataset = new Dataset2<>(1);
        this.workingset = new WorkingSet();
        this.encoder = new DatasetConverter<>();
        this.decoder = new DatasetConverter<>();
        this.gen = new DatasetP2Generator3(dataset, workingset, encoder, decoder);
        gen.generateDataset();
    }

    @Test
    public void positionSks()
    {
        this.setting.bglob_min = 0.4;
        this.setting.bglob_max = 0.6;
        this.setting.bloc_min = 0.7;
        this.setting.bloc_max = 0.9;
        this.setting.brand_min = 0.001;
        this.setting.brand_max = 0.01;
        this.setting.total_core = 3;
        this.setting.max_particle = 10;
        this.setting.max_epoch = 5000;

        this.generateDataset();
        this.pso = new PSOP2(this.setting, this.gen);
        this.pso.initializeSwarm();
        //this.pso.updateSwarmFitness();
        Data.replacePositon(pso.particles[0].data.positions, new Position[] {
                new Position(new int[] {587, 650, 585, 646, 653, 651, 0, 0, 0, 687, 647, 583, 652, 586, 689, 690, 0, 550, 547, 691, 584, 548, 649, 0, 644, 0, 686, 0, 0, 0, 688, 645, 588, 0, 0, 0, 549, 0, 0, 0, 546, 0, 648, 0, 0, 0, 0}),
                new Position(new int[] {581, 682, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 580, 683, 579, 684, 582, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 685, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}),
                new Position(new int[] {259, 257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}),
                new Position(new int[] {306, 309, 305, 21, 75, 9, 8, 0, 314, 300, 302, 307, 311, 26, 6, 0, 313, 73, 310, 308, 25, 303, 27, 0, 7, 301, 15, 10, 5, 18, 312, 0, 22, 304, 78, 74, 11, 72, 0, 0, 76, 16, 12, 14, 70, 4, 81, 0, 79, 0, 2, 0, 13, 17, 71, 20, 0, 83, 0, 84, 0, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 82, 0, 0, 0, 0, 0, 0, 0, 3, 19, 0, 0, 0, 0, 77, 0, 0, 23}),
                new Position(new int[] {207, 376, 552, 562, 558, 0, 384, 571, 363, 392, 395, 451, 60, 229, 262, 489, 560, 453, 0, 428, 556, 411, 184, 101, 170, 63, 110, 361, 62, 414, 432, 572, 144, 516, 360, 294, 341, 469, 279, 40, 633, 559, 0, 452, 660, 0, 160, 93, 0, 661, 148, 162, 519, 540, 518, 156, 398, 615, 183, 0, 224, 664, 0, 543, 344, 668, 66, 619, 0, 155, 358, 208, 443, 94, 263, 387, 261, 367, 233, 388, 107, 167, 180, 442, 641, 0, 92, 119, 380, 171, 349, 370, 231, 157, 640, 418, 0, 609, 509, 348, 276, 326, 283, 383, 483, 403, 554, 482, 0, 382, 607, 0, 541, 56, 0, 130, 603, 368, 476, 505, 97, 0, 517, 260, 0, 625, 347, 0, 526, 284, 0, 95, 291, 485, 570, 0, 169, 206, 534, 102, 0, 39, 663, 365, 122, 209, 521, 0, 448, 281, 178, 450, 404, 226, 491, 475, 0, 213, 401, 343, 164, 672, 150, 366, 0, 112, 608, 106, 88, 386, 422, 325, 111, 50, 477, 676, 67, 0, 416, 132, 445, 446, 211, 617, 0, 444, 99, 273, 618, 429, 555, 0, 334, 484, 677, 381, 0, 389, 89, 103, 55, 654, 642, 566, 134, 372, 235, 163, 0, 234, 133, 147, 553, 0, 409, 391, 346, 104, 222, 506, 0, 669, 0, 139, 355, 629, 435, 296, 52, 576, 161, 574, 405, 466, 598, 0, 479, 189, 0, 589, 665, 551, 152, 0, 674, 151, 407, 670, 0, 439, 375, 280, 64, 57, 510, 0, 457, 96, 402, 592, 0, 614, 0, 542, 357, 616, 223, 121, 397, 98, 330, 58, 412, 165, 0, 228, 627, 220, 359, 463, 292, 406, 329, 33, 430, 467, 61, 561, 568, 563, 447, 221, 373, 108, 297, 436, 212, 203, 0, 282, 174, 227, 673, 225, 345, 120, 622, 0, 138, 369, 0, 630, 272, 0, 427, 342, 141, 544, 114, 331, 364, 441, 680, 0, 42, 90, 493, 0, 417, 333, 611, 181, 0, 100, 293, 532, 264, 511, 0, 51, 390, 179, 36, 465, 166, 159, 529, 557, 666, 472, 0, 116, 339, 434, 168, 143, 0, 567, 0, 237, 421, 371, 105, 501, 0, 393, 655, 124, 573, 0, 29, 480, 632, 0, 494, 527, 638, 399, 423, 604, 0, 449, 176, 385, 173, 374, 474, 569, 0, 394, 524, 142, 140, 68, 438, 350, 0, 41, 656, 0, 455, 0, 0, 495, 0, 49, 205, 0, 131, 468, 158, 659, 0, 197, 0, 419, 242, 135, 149, 0, 637, 0, 594, 332, 0, 596, 0, 286, 145, 0, 488, 636, 0, 191, 0, 0, 0, 400, 639, 379, 0, 0, 545, 0, 54, 146, 289, 69, 0, 196, 0, 271, 186, 0, 0, 0, 478, 86, 671, 118, 0, 601, 322, 0, 340, 315, 490, 268, 454, 46, 624, 115, 194, 299, 0, 290, 129, 287, 503, 113, 0, 620, 0, 528, 172, 0, 218, 600, 0, 275, 426, 520, 0, 597, 460, 0, 190, 0, 335, 565, 0, 514, 537, 606, 65, 295, 675, 356, 85, 0, 267, 241, 154, 500, 0, 0, 522, 610, 0, 678, 0, 117, 539, 0, 396, 498, 0, 319, 415, 137, 377, 193, 0, 634, 0, 136, 536, 0, 249, 0, 0, 0, 413, 667, 433, 0, 0, 0, 590, 0, 662, 0, 202, 0, 508, 0, 657, 0, 328, 440, 535, 0, 564, 658, 0, 0, 216, 274, 182, 502, 362, 0, 504, 0, 123, 512, 0, 531, 87, 0, 533, 0, 185, 578, 219, 538, 0, 577, 0, 628, 631, 523, 408, 59, 525, 0, 327, 378, 232, 187, 0, 492, 0, 245, 199, 0, 0, 0, 530, 0, 0, 599, 0, 336, 200, 0, 91, 513, 0, 201, 0, 626, 48, 204, 321, 0, 44, 497, 210, 0, 285, 230, 277, 240, 238, 681, 35, 0, 605, 0, 192, 461, 0, 127, 410, 0, 0, 0, 424, 354, 198, 623, 499, 243, 320, 188, 487, 177, 318, 265, 462, 239, 316, 593, 0, 153, 0, 612, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 0, 0, 0, 215, 0, 507, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 591, 0, 515, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 602, 0, 0, 0, 0, 0, 0, 0, 270, 471, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 643, 0, 575, 0, 175, 0, 0, 0, 0, 0, 0, 0, 496, 679, 0, 0, 0, 0, 613, 595, 0, 0, 0, 0, 47, 621, 0, 0, 635, 0, 0, 0, 0, 0, 45, 0, 337, 0, 0, 0, 425, 0, 0, 0, 217, 0, 0, 0, 0, 0, 0, 317, 0, 0, 125, 0, 0, 37, 0, 31, 0, 0, 0, 53, 0, 0, 486, 0, 352, 0, 0, 0, 38, 0, 0, 0, 266, 0, 0, 0, 0, 0, 456, 0, 458, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 278, 0, 0, 0, 0, 0, 32, 30, 0, 0, 0, 246, 481, 248, 0, 0, 0, 353, 0, 0, 214, 0, 109, 247, 459, 269, 420, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 431, 0, 0, 0, 351, 0, 0, 0, 324, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 338, 0, 0, 0, 464, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 437, 0, 323, 0, 0, 236, 0, 0, 0, 0, 0, 0, 473, 0, 0, 288})
/*                new Position(new int[]{}),
                new Position(new int[]{}),
                new Position(new int[]{}),
                new Position(new int[]{}),
                new Position(new int[]{})*/
        });
        final Lesson[] lessons = pso.lessons;
        for(final int lesson : this.pso.particles[0].data.positions[3].position)
        {
            System.out.printf("%d\t", lessons[lesson].sks);
        }
        System.out.println();
        pso.calculateFitness(pso.particles[0]);
        //pso.repairData(pso.particles[0]);
        //pso.calculateFitness(pso.particles[0]);
        //System.out.println(pso.particles[0].data.fitness);
    }

    @Test public void positionFaulty_Before()
    {
        this.setting.bglob_min = 0.4;
        this.setting.bglob_max = 0.6;
        this.setting.bloc_min = 0.7;
        this.setting.bloc_max = 0.9;
        this.setting.brand_min = 0.001;
        this.setting.brand_max = 0.01;
        this.setting.total_core = 3;
        this.setting.max_particle = 10;
        this.setting.max_epoch = 5000;

        this.generateDataset();
        this.pso = new PSOP2(this.setting, this.gen);
        this.pso.initializeSwarm();
        //this.pso.updateSwarmFitness();
        Data.replacePositon(pso.particles[0].data.positions, new Position[] {
                new Position(new int[] {587, 650, 585, 646, 653, 651, 0, 0, 0, 687, 647, 583, 652, 586, 689, 690, 0, 550, 547, 691, 584, 548, 649, 0, 644, 0, 686, 0, 0, 0, 688, 645, 588, 0, 0, 0, 549, 0, 0, 0, 546, 0, 648, 0, 0, 0, 0}),
                new Position(new int[] {581, 682, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 580, 683, 579, 684, 582, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 685, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}),
                new Position(new int[] {259, 257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}),
                new Position(new int[] {314, 310, 303, 308, 301, 311, 302, 0, 312, 309, 307, 305, 313, 20, 83, 0, 300, 304, 3, 84, 7, 12, 22, 17, 0, 15, 18, 8, 21, 80, 14, 71, 1, 0, 19, 82, 74, 24, 0, 306, 0, 76, 0, 0, 81, 75, 70, 73, 13, 0, 0, 0, 0, 0, 0, 78, 26, 25, 0, 0, 0, 0, 10, 0, 4, 72, 9, 23, 77, 0, 0, 2, 0, 27, 0, 0, 5, 11, 0, 0, 0, 0, 0, 0, 0, 0, 79, 6, 0, 0, 16}),
                new Position(new int[] {207, 376, 552, 562, 558, 0, 384, 571, 363, 392, 395, 451, 60, 229, 262, 489, 560, 453, 0, 428, 556, 411, 184, 101, 170, 63, 110, 361, 62, 414, 432, 572, 144, 516, 360, 294, 341, 469, 279, 40, 633, 559, 0, 452, 660, 0, 160, 93, 0, 661, 148, 162, 519, 540, 518, 156, 398, 615, 183, 0, 224, 664, 0, 543, 344, 668, 66, 619, 0, 155, 358, 208, 443, 94, 263, 387, 261, 367, 233, 388, 107, 167, 180, 442, 641, 0, 92, 119, 380, 171, 349, 370, 231, 157, 640, 418, 0, 609, 509, 348, 276, 326, 283, 383, 483, 403, 554, 482, 0, 382, 607, 0, 541, 56, 0, 130, 603, 368, 476, 505, 97, 0, 517, 260, 0, 625, 347, 0, 526, 284, 0, 95, 291, 485, 570, 0, 169, 206, 534, 102, 0, 39, 663, 365, 122, 209, 521, 0, 448, 281, 178, 450, 404, 226, 491, 475, 0, 213, 401, 343, 164, 672, 150, 366, 0, 112, 608, 106, 88, 386, 422, 325, 111, 50, 477, 676, 67, 0, 416, 132, 445, 446, 211, 617, 0, 444, 99, 273, 618, 429, 555, 0, 334, 484, 677, 381, 0, 389, 89, 103, 55, 654, 642, 566, 134, 372, 235, 163, 0, 234, 133, 147, 553, 0, 409, 391, 346, 104, 222, 506, 0, 669, 0, 139, 355, 629, 435, 296, 52, 576, 161, 574, 405, 466, 598, 0, 479, 189, 0, 589, 665, 551, 152, 0, 674, 151, 407, 670, 0, 439, 375, 280, 64, 57, 510, 0, 457, 96, 402, 592, 0, 614, 0, 542, 357, 616, 223, 121, 397, 98, 330, 58, 412, 165, 0, 228, 627, 220, 359, 463, 292, 406, 329, 33, 430, 467, 61, 561, 568, 563, 447, 221, 373, 108, 297, 436, 212, 203, 0, 282, 174, 227, 673, 225, 345, 120, 622, 0, 138, 369, 0, 630, 272, 0, 427, 342, 141, 544, 114, 331, 364, 441, 680, 0, 42, 90, 493, 0, 417, 333, 611, 181, 0, 100, 293, 532, 264, 511, 0, 51, 390, 179, 36, 465, 166, 159, 529, 557, 666, 472, 0, 116, 339, 434, 168, 143, 0, 567, 0, 237, 421, 371, 105, 501, 0, 393, 655, 124, 573, 0, 29, 480, 632, 0, 494, 527, 638, 399, 423, 604, 0, 449, 176, 385, 173, 374, 474, 569, 0, 394, 524, 142, 140, 68, 438, 350, 0, 41, 656, 0, 455, 0, 0, 495, 0, 49, 205, 0, 131, 468, 158, 659, 0, 197, 0, 419, 242, 135, 149, 0, 637, 0, 594, 332, 0, 596, 0, 286, 145, 0, 488, 636, 0, 191, 0, 0, 0, 400, 639, 379, 0, 0, 545, 0, 54, 146, 289, 69, 0, 196, 0, 271, 186, 0, 0, 0, 478, 86, 671, 118, 0, 601, 322, 0, 340, 315, 490, 268, 454, 46, 624, 115, 194, 299, 0, 290, 129, 287, 503, 113, 0, 620, 0, 528, 172, 0, 218, 600, 0, 275, 426, 520, 0, 597, 460, 0, 190, 0, 335, 565, 0, 514, 537, 606, 65, 295, 675, 356, 85, 0, 267, 241, 154, 500, 0, 0, 522, 610, 0, 678, 0, 117, 539, 0, 396, 498, 0, 319, 415, 137, 377, 193, 0, 634, 0, 136, 536, 0, 249, 0, 0, 0, 413, 667, 433, 0, 0, 0, 590, 0, 662, 0, 202, 0, 508, 0, 657, 0, 328, 440, 535, 0, 564, 658, 0, 0, 216, 274, 182, 502, 362, 0, 504, 0, 123, 512, 0, 531, 87, 0, 533, 0, 185, 578, 219, 538, 0, 577, 0, 628, 631, 523, 408, 59, 525, 0, 327, 378, 232, 187, 0, 492, 0, 245, 199, 0, 0, 0, 530, 0, 0, 599, 0, 336, 200, 0, 91, 513, 0, 201, 0, 626, 48, 204, 321, 0, 44, 497, 210, 0, 285, 230, 277, 240, 238, 681, 35, 0, 605, 0, 192, 461, 0, 127, 410, 0, 0, 0, 424, 354, 198, 623, 499, 243, 320, 188, 487, 177, 318, 265, 462, 239, 316, 593, 0, 153, 0, 612, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 0, 0, 0, 215, 0, 507, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 591, 0, 515, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 602, 0, 0, 0, 0, 0, 0, 0, 270, 471, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 643, 0, 575, 0, 175, 0, 0, 0, 0, 0, 0, 0, 496, 679, 0, 0, 0, 0, 613, 595, 0, 0, 0, 0, 47, 621, 0, 0, 635, 0, 0, 0, 0, 0, 45, 0, 337, 0, 0, 0, 425, 0, 0, 0, 217, 0, 0, 0, 0, 0, 0, 317, 0, 0, 125, 0, 0, 37, 0, 31, 0, 0, 0, 53, 0, 0, 486, 0, 352, 0, 0, 0, 38, 0, 0, 0, 266, 0, 0, 0, 0, 0, 456, 0, 458, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 278, 0, 0, 0, 0, 0, 32, 30, 0, 0, 0, 246, 481, 248, 0, 0, 0, 353, 0, 0, 214, 0, 109, 247, 459, 269, 420, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 431, 0, 0, 0, 351, 0, 0, 0, 324, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 338, 0, 0, 0, 464, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 437, 0, 323, 0, 0, 236, 0, 0, 0, 0, 0, 0, 473, 0, 0, 288})
        });
        final Lesson[] lessons = pso.lessons;
        for(final int lesson : this.pso.particles[0].data.positions[3].position)
        {
            System.out.printf("%d\t", lessons[lesson].sks);
        }
        System.out.println();
    }

    @Test public void positionFaulty_After()
    {
        this.setting.bglob_min = 0.4;
        this.setting.bglob_max = 0.6;
        this.setting.bloc_min = 0.7;
        this.setting.bloc_max = 0.9;
        this.setting.brand_min = 0.001;
        this.setting.brand_max = 0.01;
        this.setting.total_core = 3;
        this.setting.max_particle = 10;
        this.setting.max_epoch = 5000;

        this.generateDataset();
        this.pso = new PSOP2(this.setting, this.gen);
        this.pso.initializeSwarm();
        //this.pso.updateSwarmFitness();
        Data.replacePositon(pso.particles[0].data.positions, new Position[] {
                new Position(new int[] {587, 650, 585, 646, 653, 651, 0, 0, 0, 687, 647, 583, 652, 586, 689, 690, 0, 550, 547, 691, 584, 548, 649, 0, 644, 0, 686, 0, 0, 0, 688, 645, 588, 0, 0, 0, 549, 0, 0, 0, 546, 0, 648, 0, 0, 0, 0}),
                new Position(new int[] {581, 682, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 580, 683, 579, 684, 582, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 685, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}),
                new Position(new int[] {259, 257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}),
                new Position(new int[] {314, 310, 303, 308, 301, 311, 302, 0, 312, 309, 307, 305, 313, 306, 83, 0, 300, 304, 3, 84, 7, 12, 22, 0, 17, 15, 18, 8, 21, 80, 14, 0, 20, 1, 71, 82, 74, 24, 19, 76, 0, 0, 81, 75, 70, 73, 13, 0, 0, 0, 0, 0, 0, 0, 78, 26, 25, 0, 0, 0, 10, 0, 4, 0, 72, 9, 23, 77, 0, 2, 0, 27, 0, 0, 5, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 6, 0, 0, 0, 16}),
                new Position(new int[] {207, 376, 552, 562, 558, 0, 384, 571, 363, 392, 395, 451, 60, 229, 262, 489, 560, 453, 0, 428, 556, 411, 184, 101, 170, 63, 110, 361, 62, 414, 432, 572, 144, 516, 360, 294, 341, 469, 279, 40, 633, 559, 0, 452, 660, 0, 160, 93, 0, 661, 148, 162, 519, 540, 518, 156, 398, 615, 183, 0, 224, 664, 0, 543, 344, 668, 66, 619, 0, 155, 358, 208, 443, 94, 263, 387, 261, 367, 233, 388, 107, 167, 180, 442, 641, 0, 92, 119, 380, 171, 349, 370, 231, 157, 640, 418, 0, 609, 509, 348, 276, 326, 283, 383, 483, 403, 554, 482, 0, 382, 607, 0, 541, 56, 0, 130, 603, 368, 476, 505, 97, 0, 517, 260, 0, 625, 347, 0, 526, 284, 0, 95, 291, 485, 570, 0, 169, 206, 534, 102, 0, 39, 663, 365, 122, 209, 521, 0, 448, 281, 178, 450, 404, 226, 491, 475, 0, 213, 401, 343, 164, 672, 150, 366, 0, 112, 608, 106, 88, 386, 422, 325, 111, 50, 477, 676, 67, 0, 416, 132, 445, 446, 211, 617, 0, 444, 99, 273, 618, 429, 555, 0, 334, 484, 677, 381, 0, 389, 89, 103, 55, 654, 642, 566, 134, 372, 235, 163, 0, 234, 133, 147, 553, 0, 409, 391, 346, 104, 222, 506, 0, 669, 0, 139, 355, 629, 435, 296, 52, 576, 161, 574, 405, 466, 598, 0, 479, 189, 0, 589, 665, 551, 152, 0, 674, 151, 407, 670, 0, 439, 375, 280, 64, 57, 510, 0, 457, 96, 402, 592, 0, 614, 0, 542, 357, 616, 223, 121, 397, 98, 330, 58, 412, 165, 0, 228, 627, 220, 359, 463, 292, 406, 329, 33, 430, 467, 61, 561, 568, 563, 447, 221, 373, 108, 297, 436, 212, 203, 0, 282, 174, 227, 673, 225, 345, 120, 622, 0, 138, 369, 0, 630, 272, 0, 427, 342, 141, 544, 114, 331, 364, 441, 680, 0, 42, 90, 493, 0, 417, 333, 611, 181, 0, 100, 293, 532, 264, 511, 0, 51, 390, 179, 36, 465, 166, 159, 529, 557, 666, 472, 0, 116, 339, 434, 168, 143, 0, 567, 0, 237, 421, 371, 105, 501, 0, 393, 655, 124, 573, 0, 29, 480, 632, 0, 494, 527, 638, 399, 423, 604, 0, 449, 176, 385, 173, 374, 474, 569, 0, 394, 524, 142, 140, 68, 438, 350, 0, 41, 656, 0, 455, 0, 0, 495, 0, 49, 205, 0, 131, 468, 158, 659, 0, 197, 0, 419, 242, 135, 149, 0, 637, 0, 594, 332, 0, 596, 0, 286, 145, 0, 488, 636, 0, 191, 0, 0, 0, 400, 639, 379, 0, 0, 545, 0, 54, 146, 289, 69, 0, 196, 0, 271, 186, 0, 0, 0, 478, 86, 671, 118, 0, 601, 322, 0, 340, 315, 490, 268, 454, 46, 624, 115, 194, 299, 0, 290, 129, 287, 503, 113, 0, 620, 0, 528, 172, 0, 218, 600, 0, 275, 426, 520, 0, 597, 460, 0, 190, 0, 335, 565, 0, 514, 537, 606, 65, 295, 675, 356, 85, 0, 267, 241, 154, 500, 0, 0, 522, 610, 0, 678, 0, 117, 539, 0, 396, 498, 0, 319, 415, 137, 377, 193, 0, 634, 0, 136, 536, 0, 249, 0, 0, 0, 413, 667, 433, 0, 0, 0, 590, 0, 662, 0, 202, 0, 508, 0, 657, 0, 328, 440, 535, 0, 564, 658, 0, 0, 216, 274, 182, 502, 362, 0, 504, 0, 123, 512, 0, 531, 87, 0, 533, 0, 185, 578, 219, 538, 0, 577, 0, 628, 631, 523, 408, 59, 525, 0, 327, 378, 232, 187, 0, 492, 0, 245, 199, 0, 0, 0, 530, 0, 0, 599, 0, 336, 200, 0, 91, 513, 0, 201, 0, 626, 48, 204, 321, 0, 44, 497, 210, 0, 285, 230, 277, 240, 238, 681, 35, 0, 605, 0, 192, 461, 0, 127, 410, 0, 0, 0, 424, 354, 198, 623, 499, 243, 320, 188, 487, 177, 318, 265, 462, 239, 316, 593, 0, 153, 0, 612, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 0, 0, 0, 215, 0, 507, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 591, 0, 515, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 602, 0, 0, 0, 0, 0, 0, 0, 270, 471, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 643, 0, 575, 0, 175, 0, 0, 0, 0, 0, 0, 0, 496, 679, 0, 0, 0, 0, 613, 595, 0, 0, 0, 0, 47, 621, 0, 0, 635, 0, 0, 0, 0, 0, 45, 0, 337, 0, 0, 0, 425, 0, 0, 0, 217, 0, 0, 0, 0, 0, 0, 317, 0, 0, 125, 0, 0, 37, 0, 31, 0, 0, 0, 53, 0, 0, 486, 0, 352, 0, 0, 0, 38, 0, 0, 0, 266, 0, 0, 0, 0, 0, 456, 0, 458, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 278, 0, 0, 0, 0, 0, 32, 30, 0, 0, 0, 246, 481, 248, 0, 0, 0, 353, 0, 0, 214, 0, 109, 247, 459, 269, 420, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 431, 0, 0, 0, 351, 0, 0, 0, 324, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 338, 0, 0, 0, 464, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 437, 0, 323, 0, 0, 236, 0, 0, 0, 0, 0, 0, 473, 0, 0, 288})
        });
        final Lesson[] lessons = pso.lessons;
        for(final int lesson : this.pso.particles[0].data.positions[3].position)
        {
            System.out.printf("%d\t", lessons[lesson].sks);
        }
        System.out.println();
    }

    @Test public void positionFaultyClassroomAllowed_After()
    {
        this.setting.bglob_min = 0.4;
        this.setting.bglob_max = 0.6;
        this.setting.bloc_min = 0.7;
        this.setting.bloc_max = 0.9;
        this.setting.brand_min = 0.001;
        this.setting.brand_max = 0.01;
        this.setting.total_core = 3;
        this.setting.max_particle = 10;
        this.setting.max_epoch = 5000;

        this.generateDataset();
        this.pso = new PSOP2(this.setting, this.gen);
        this.pso.initializeSwarm();
        //this.pso.updateSwarmFitness();
        Data.replacePositon(pso.particles[0].data.positions, new Position[] {
                new Position(new int[] {587, 650, 585, 646, 653, 651, 0, 0, 0, 687, 647, 583, 652, 586, 689, 690, 0, 550, 547, 691, 584, 548, 649, 0, 644, 0, 686, 0, 0, 0, 688, 645, 588, 0, 0, 0, 549, 0, 0, 0, 546, 0, 648, 0, 0, 0, 0}),
                new Position(new int[] {581, 682, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 580, 683, 579, 684, 582, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 685, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}),
                new Position(new int[] {259, 257, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 253, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}),
                new Position(new int[] {314, 310, 303, 308, 301, 311, 302, 0, 312, 309, 307, 305, 313, 306, 83, 0, 300, 304, 3, 84, 7, 12, 22, 0, 17, 15, 18, 8, 21, 80, 14, 0, 20, 1, 71, 82, 74, 24, 19, 76, 0, 0, 81, 75, 70, 73, 13, 0, 0, 0, 0, 0, 0, 0, 78, 26, 25, 0, 0, 0, 10, 0, 4, 0, 72, 9, 23, 77, 0, 2, 0, 27, 0, 0, 5, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 6, 0, 0, 0, 16}),
                new Position(new int[] {207, 376, 552, 562, 558, 0, 384, 571, 363, 392, 395, 451, 60, 229, 262, 489, 560, 453, 0, 428, 556, 411, 184, 101, 170, 63, 110, 361, 62, 414, 432, 572, 144, 516, 360, 294, 341, 469, 279, 40, 633, 559, 0, 452, 660, 0, 160, 93, 0, 661, 148, 162, 519, 540, 518, 156, 398, 615, 183, 0, 224, 664, 0, 543, 344, 668, 66, 619, 0, 155, 358, 208, 443, 94, 263, 387, 261, 367, 233, 388, 107, 167, 180, 442, 641, 0, 92, 119, 380, 171, 349, 370, 231, 157, 640, 418, 0, 609, 509, 348, 276, 326, 283, 383, 483, 403, 554, 482, 0, 382, 607, 0, 541, 56, 0, 130, 603, 368, 476, 505, 97, 0, 517, 260, 0, 625, 347, 0, 526, 284, 0, 95, 291, 485, 570, 0, 169, 206, 534, 102, 0, 39, 663, 365, 122, 209, 521, 0, 448, 281, 178, 450, 404, 226, 491, 475, 0, 213, 401, 343, 164, 672, 150, 366, 0, 112, 608, 106, 88, 386, 422, 325, 111, 50, 477, 676, 67, 0, 416, 132, 445, 446, 211, 617, 0, 444, 99, 273, 618, 429, 555, 0, 334, 484, 677, 381, 0, 389, 89, 103, 55, 654, 642, 566, 134, 372, 235, 163, 0, 234, 133, 147, 553, 0, 409, 391, 346, 104, 222, 506, 0, 669, 0, 139, 355, 629, 435, 296, 52, 576, 161, 574, 405, 466, 598, 0, 479, 189, 0, 589, 665, 551, 152, 0, 674, 151, 407, 670, 0, 439, 375, 280, 64, 57, 510, 0, 457, 96, 402, 592, 0, 614, 0, 542, 357, 616, 223, 121, 397, 98, 330, 58, 412, 165, 0, 228, 627, 220, 359, 463, 292, 406, 329, 33, 430, 467, 61, 561, 568, 563, 447, 221, 373, 108, 297, 436, 212, 203, 0, 282, 174, 227, 673, 225, 345, 120, 622, 0, 138, 369, 0, 630, 272, 0, 427, 342, 141, 544, 114, 331, 364, 441, 680, 0, 42, 90, 493, 0, 417, 333, 611, 181, 0, 100, 293, 532, 264, 511, 0, 51, 390, 179, 36, 465, 166, 159, 529, 557, 666, 472, 0, 116, 339, 434, 168, 143, 0, 567, 0, 237, 421, 371, 105, 501, 0, 393, 655, 124, 573, 0, 29, 480, 632, 0, 494, 527, 638, 399, 423, 604, 0, 449, 176, 385, 173, 374, 474, 569, 0, 394, 524, 142, 140, 68, 438, 350, 0, 41, 656, 0, 455, 0, 0, 495, 0, 49, 205, 0, 131, 468, 158, 659, 0, 197, 0, 419, 242, 135, 149, 0, 637, 0, 594, 332, 0, 596, 0, 286, 145, 0, 488, 636, 0, 191, 0, 0, 0, 400, 639, 379, 0, 0, 545, 0, 54, 146, 289, 69, 0, 196, 0, 271, 186, 0, 0, 0, 478, 86, 671, 118, 0, 601, 322, 0, 340, 315, 490, 268, 454, 46, 624, 115, 194, 299, 0, 290, 129, 287, 503, 113, 0, 620, 0, 528, 172, 0, 218, 600, 0, 275, 426, 520, 0, 597, 460, 0, 190, 0, 335, 565, 0, 514, 537, 606, 65, 295, 675, 356, 85, 0, 267, 241, 154, 500, 0, 0, 522, 610, 0, 678, 0, 117, 539, 0, 396, 498, 0, 319, 415, 137, 377, 193, 0, 634, 0, 136, 536, 0, 249, 0, 0, 0, 413, 667, 433, 0, 0, 0, 590, 0, 662, 0, 202, 0, 508, 0, 657, 0, 328, 440, 535, 0, 564, 658, 0, 0, 216, 274, 182, 502, 362, 0, 504, 0, 123, 512, 0, 531, 87, 0, 533, 0, 185, 578, 219, 538, 0, 577, 0, 628, 631, 523, 408, 59, 525, 0, 327, 378, 232, 187, 0, 492, 0, 245, 199, 0, 0, 0, 530, 0, 0, 599, 0, 336, 200, 0, 91, 513, 0, 201, 0, 626, 48, 204, 321, 0, 44, 497, 210, 0, 285, 230, 277, 240, 238, 681, 35, 0, 605, 0, 192, 461, 0, 127, 410, 0, 0, 0, 424, 354, 198, 623, 499, 243, 320, 188, 487, 177, 318, 265, 462, 239, 316, 593, 0, 153, 0, 612, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 195, 0, 0, 0, 215, 0, 507, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 591, 0, 515, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 602, 0, 0, 0, 0, 0, 0, 0, 270, 471, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 643, 0, 575, 0, 175, 0, 0, 0, 0, 0, 0, 0, 496, 679, 0, 0, 0, 0, 613, 595, 0, 0, 0, 0, 47, 621, 0, 0, 635, 0, 0, 0, 0, 0, 45, 0, 337, 0, 0, 0, 425, 0, 0, 0, 217, 0, 0, 0, 0, 0, 0, 317, 0, 0, 125, 0, 0, 37, 0, 31, 0, 0, 0, 53, 0, 0, 486, 0, 352, 0, 0, 0, 38, 0, 0, 0, 266, 0, 0, 0, 0, 0, 456, 0, 458, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 278, 0, 0, 0, 0, 0, 32, 30, 0, 0, 0, 246, 481, 248, 0, 0, 0, 353, 0, 0, 214, 0, 109, 247, 459, 269, 420, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 431, 0, 0, 0, 351, 0, 0, 0, 324, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 338, 0, 0, 0, 464, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 298, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 437, 0, 323, 0, 0, 236, 0, 0, 0, 0, 0, 0, 473, 0, 0, 288})
        });
        final Lesson[] lessons = pso.lessons;
        for(final int lesson : this.pso.particles[0].data.positions[3].position)
        {
            System.out.printf("%s\t", String.format("[%s %s]", lessons[lesson].allowed_classroom[0] ? "1" : "", lessons[lesson].allowed_classroom[1] ? "2" : ""));
        }
        System.out.println();
    }
}